return require('lib/tap')(function (test)
  --thread not return anything
  test("test thread sleep msecs in loop thread", function(print,p,expect,uv)
    local b = os.clock()
    uv.sleep(500)
    local e = os.clock()
    local cost = (e-b)*1000
    p("stdout", {sleep=500,cost=cost})
    assert(cost>=500,"should equals")
  end)

  test("test thread create", function(print,p,expect,uv)
    local thread_id = uv.new_thread()
    local b = os.clock()
    uv.thread_create(thread_id,function(step,...) 
      local uv = require('luv')
      uv.sleep(500)
    end)
    uv.thread_join(thread_id)
    local e = os.clock()
    local cost = (e-b)*1000
    p("stdout", {sleep=500,cost=cost})
    assert(cost>=500,"should equals")
  end)

  test("test thread create with arguments", function(print,p,expect,uv)
    local thread_id = uv.new_thread()
    local b = os.clock()
    uv.thread_create(thread_id,function(num,s,null,bool,five,hw) 
      assert(type(num)=="number")
      assert(type(s)=="string")
      assert(null==nil)
      assert(bool==false)
      assert(five==5)
      assert(hw=='helloworld')
    end, 500, 'string', nil, false, 5, "helloworld")
    uv.thread_join(thread_id)
  end)

end)
